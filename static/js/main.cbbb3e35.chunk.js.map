{"version":3,"sources":["components/Loading.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","components/logo.svg"],"names":["Loading","Header","styled","header","StyledLink","NavLink","Logo","img","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","src","LogoUrl","to","activeClassName","exact","currentUser","attributes","username","type","onClick","logout","console","log","push","Footer","footer","Home","lazy","History","About","Register","App","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","AV","init","appId","appKey","serverURL","Auth","register","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","login","logIn","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","finally","newFilename","newFile","isUpoading","err","values","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext","module","exports"],"mappings":"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","file":"static/js/main.cbbb3e35.chunk.js","sourcesContent":["import React from \"react\";\r\n function Loading(){\r\n    return(\r\n        <div>Loading.. </div>\r\n    )\r\n\r\n}\r\nexport default Loading;","import React ,{useState}from 'react';\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\nimport LogoUrl from './logo.svg';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport {useStores} from '../stores';\r\nimport {observer}from 'mobx-react';\r\n\r\nconst Header=styled.header`\r\ndisplay:flex;\r\nalign-items:center;\r\nbackground-color:rgb(52, 58, 64);\r\npadding: 15px 100px;\r\ncolor:#fff;\r\n`;\r\nconst StyledLink=styled(NavLink)`\r\ncolor:#fff;\r\nmargin-left:38px;\r\n\r\n&.active{\r\n    border-bottom:3px solid rgb(24, 144, 255);\r\n}\r\n`;\r\n\r\nconst Logo =styled.img`\r\nheight:30px;\r\nmargin-left:30px;\r\n`;\r\n\r\nconst Login = styled.div`\r\n  margin-left: auto;\r\n`;\r\n\r\nconst  StyledButton=styled(Button)\r\n`\r\nmargin-left:15px;\r\n\r\n\r\n`\r\n\r\n\r\n\r\nconst Component = observer(()=>{\r\n  const history=useHistory();\r\n    const {UserStore,AuthStore}=useStores();\r\n\r\n    const handleLogout=()=>{\r\n        AuthStore.logout();\r\n\r\n    };\r\n\r\n    const handleLogin=()=>{\r\n        console.log('跳转到登录页面');\r\n        history.push('/login');\r\n    };\r\n\r\n    const handleRegister=()=>{\r\n        console.log('跳转到注册页面');\r\n        history.push('/register');\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n    <Header>\r\n       <Logo src={LogoUrl}/>\r\n        <nav> \r\n        <StyledLink to=\"/\" activeClassName=\"active\" exact>首页</StyledLink>\r\n        <StyledLink to=\"/history\" activeClassName=\"active\">历史上传</StyledLink>\r\n        <StyledLink to=\"/about\" activeClassName=\"active\">关于爱旭</StyledLink>\r\n        </nav>\r\n\r\n        <Login>\r\n            {\r\n            UserStore.currentUser?\r\n            <>{UserStore.currentUser.attributes.username}\r\n            <StyledButton type=\"primary\" onClick={handleLogout}>立即注销</StyledButton>\r\n            </> \r\n            :\r\n            <>\r\n            <StyledButton type=\"primary\" onClick={handleLogin}>点击登录</StyledButton>\r\n            <StyledButton type=\"primary\"onClick={handleRegister}>注册账户</StyledButton>\r\n            </>\r\n              }\r\n        </Login>\r\n    </Header>\r\n\r\n);\r\n\r\n});\r\n\r\nexport default Component;","import React from 'react'\r\nimport styled from 'styled-components';\r\nconst Footer=styled.footer`\r\ntext-align:center;\r\nwidth:100%;\r\nheight:32px;\r\nbackground-color:rgb(52, 58, 64);\r\ncolor:#fff;\r\nfont-size:16px;\r\n`;\r\n\r\n\r\nfunction Component(){\r\nreturn(\r\n    <Footer>\r\n         <p>Copyright© 2019-2022 爱旭图床 滕春雷 版权所有侵权必究</p>\r\n    </Footer>\r\n);\r\n\r\n}\r\n\r\nexport default Component;","import React, { lazy, Suspense } from 'react';\nimport './App.css';\nimport  Loading from './components/Loading';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport{\n  Switch,\n  Route\n} from 'react-router-dom';\n\n\n//import Home from './pages/Home';\n//import History from './pages/History';\n//import About from './pages/About';\n\n\n\nconst Home=lazy(() =>import('./pages/Home'));\nconst History=lazy(() =>import('./pages/History'));\nconst About=lazy(() =>import('./pages/About'));\nconst Login=lazy(() =>import('./pages/Login'));\nconst Register=lazy(() =>import('./pages/Register'));\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <main>\n    <Suspense fallback={<div>Loading</div>}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/history\"  component={History} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/login\"  component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n      </Suspense>\n     </main>\n\n      <Footer/> \n  \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport Model from './models';\n\nimport {\n  HashRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import AV,{Query,User} from 'leancloud-storage';\r\nimport resolve from 'resolve';\r\n\r\n\r\n\r\nAV.init({\r\n    appId: \"6wFgmvwt68oalbCtVNN1M2ky-gzGzoHsz\",\r\n    appKey: \"AdHML4fTP8rw9J7swg8yK86r\",\r\n    serverURL: \"https://6wfgmvwt.lc-cn-n1-shared.com\"\r\n  });\r\n\r\n\r\n\r\n\r\nconst Auth = {\r\n\r\n  register(username,password){\r\n    let user =new User();\r\n    user.setUsername(username);\r\n    user.setPassword(password);\r\n    return new Promise( (resolve,reject) => { \r\n    user.signUp().then(loginedUser=>resolve(loginedUser),error=>reject(error))\r\n    });\r\n\r\n},\r\n\r\n login(username,password){\r\n  return new Promise( (resolve,reject)=>{\r\n      User.logIn(username,password).then(loginedUser =>resolve(loginedUser),error=>reject(error));\r\n      });\r\n },\r\n\r\n\r\nlogout(){\r\n  User.logOut();\r\n},\r\n\r\ngetCurrentUser(){\r\nreturn User.current();\r\n\r\n}\r\n};\r\n\r\n\r\nconst Uploader={\r\n    add(file,filename){\r\n        const item =new AV.Object('Image');\r\n        const avFile =new AV.File(filename,file);\r\n        item.set('filename',filename);\r\n        item.set('owner',AV.User.current());\r\n        item.set('url',avFile);\r\n        return new  Promise((resolve,reject)=>{\r\n            item.save().then(serverFile=>resolve(serverFile),error=>reject(error));\r\n        });\r\n      },\r\n\r\n      find({page=0,limit=10}){\r\n        const query =new AV.Query('Image');\r\n        query.include('owner');\r\n        query.limit(limit);\r\n        query.skip(page*limit);\r\n        query.descending('createdAt');\r\n        query.equalTo('owner',AV.User.current());\r\n        return new Promise((resolve,reject)=>{\r\n            query.find()\r\n            .then(results=>resolve(results))\r\n            .catch(error=>reject(error))\r\n        });\r\n      }\r\n}\r\n\r\nwindow.Uploader=Uploader;\r\n\r\nexport {Auth,Uploader};","import { observable ,action} from 'mobx';\r\nimport { Auth } from '../models';\r\n\r\nclass UserStore {\r\n    @observable currentUser=null;\r\n\r\n    @observable pullUser(){\r\n        this.currentUser=Auth.getCurrentUser()\r\n    }\r\n    \r\n    @action resetUser(){\r\n        this.currentUser=null;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default new UserStore();","import { message } from 'antd';\r\nimport { observable ,action} from 'mobx';\r\nimport { Uploader} from '../models';\r\n\r\nclass HistoryStore {\r\n   \r\n    @observable list=[];\r\n    @observable isLoading=false;\r\n    @observable hasMore=true;\r\n    @observable  page=0;\r\n    limit=10;\r\n\r\n    @action append(newList){\r\n        this.list=this.list.concat(newList);\r\n    }\r\n\r\n    @action find(){\r\n        this.isLoading=true;\r\n        Uploader.find({page:this.page,limit:this.limit})\r\n        .then(newList=>{\r\n            this.append(newList);\r\n            this.page++;\r\n             if(newList.length<this.limit)\r\n             { this.hasMore=false;}\r\n\r\n        }).catch(error=>{\r\n            message.error('数据加载失败');\r\n        }).finally( ()=>{\r\n            this.Loading=false;\r\n        });\r\n        \r\n    }\r\n        @action reset(){\r\n        this.list=[];\r\n        this.isLoading=false;\r\n        this.hasMore=true;\r\n        this.page=0;\r\n    }\r\n}\r\n\r\n\r\nexport default new HistoryStore();","import { observable ,action} from 'mobx';\r\nimport { Auth, Uploader } from '../models';\r\nimport {message} from 'antd';\r\nclass ImageStore {\r\n    @observable  filename=\"\";\r\n    @observable  file=null;\r\n    @observable  isUpoading=false;\r\n    @observable  serverFile=null;\r\n\r\n\r\n    @action setFilename(newFilename){\r\n        this.filename=newFilename;\r\n    }\r\n\r\n    @action setFile(newFile){\r\n        this.file=newFile;\r\n    }\r\n    \r\n\r\n    @action upload(){\r\n        this.isUpoading=true;\r\n        this.serverFile=null;\r\n        return new Promise((resolve,reject)=>{\r\n            Uploader.add(this.file,this.filename)\r\n            .then(serverFile=>{\r\n                this.serverFile=serverFile;\r\n                resolve(serverFile);\r\n            }).catch(err=>{\r\n               message.error('上传失败');\r\n                reject(err);\r\n            }).finally(()=>{\r\n                this.isUpoading=false;\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n         @action reset(){\r\n            this.isUpoading=false;\r\n            this.serverFile=null;\r\n\r\n\r\n         }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default new ImageStore();","import { message } from 'antd';\r\nimport { observable ,action} from 'mobx';\r\nimport { Auth } from '../models';\r\nimport UserStore from './user';\r\nimport HistoryStore from './history';\r\nimport ImageStore from './image';\r\n\r\nclass AuthStore {\r\n   \r\n    @observable values={\r\n        username:'',\r\n        password:''\r\n    };\r\n\r\n\r\n\r\n    @action setUsername(username){\r\n        this.values.username=username;\r\n    }\r\n\r\n    @action setPassword(password){\r\n        this.values.password=password;\r\n    }\r\n\r\n    @action login(){\r\n        return new Promise((resolve,reject)=>{\r\n            Auth.login(this.values.username,this.values.password).then(user=>{\r\n                UserStore.pullUser();\r\n            resolve(user);\r\n        }).catch(err=>{\r\n              UserStore.resetUser();\r\n              message.error('登录失败，请重新检查用户名与密码');\r\n                reject(err);\r\n            })\r\n        } );\r\n    }\r\n\r\n\r\n\r\n    @action register(){\r\n        return new Promise((resolve,reject)=>{\r\n            Auth.register(this.values.username,this.values.password).then(user=>{\r\n                UserStore.pullUser();\r\n               resolve(user);\r\n            }).catch(err=>{\r\n                UserStore.resetUser();\r\n                message.error('注册失败');\r\n                reject(err);\r\n            })\r\n        } );\r\n       \r\n    }\r\n    \r\n\r\n    \r\n    @action logout(){\r\n            Auth.logout();\r\n            UserStore.resetUser();\r\n            HistoryStore.reset();\r\n            ImageStore.reset();\r\n    }\r\n \r\n}\r\n\r\n\r\nexport default new AuthStore();","import React, { createContext, useContext } from 'react';\r\nimport  AuthStore  from './auth';\r\nimport  UserStore  from './user';\r\nimport ImageStore from    './image';\r\nimport HistoryStore from './history';\r\n\r\n\r\nconst context = createContext({\r\n  AuthStore,\r\n  UserStore,\r\n  ImageStore,\r\n  HistoryStore\r\n});\r\n\r\nwindow.stores={\r\n  AuthStore,\r\n  UserStore,\r\n  ImageStore,\r\n  HistoryStore\r\n}\r\n\r\nexport const useStores = () => useContext(context); ","module.exports = __webpack_public_path__ + \"static/media/logo.46acb1da.svg\";"],"sourceRoot":""}