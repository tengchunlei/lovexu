{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","Component","AuthStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","offset","type","htmlType"],"mappings":"yeAOA,IAAMA,EAAQC,IAAOC,IAAR,KAQPC,EAAMF,IAAOG,GAAR,KAMLC,EAAO,CACbC,SAAS,CACLC,KAAK,GAETC,WAAW,CACPD,KAAK,KA0IME,UA/HG,WAAO,IAClBC,EAAWC,cAAXD,UACDE,EAAQC,cAkCZ,OACE,kBAACb,EAAD,KACA,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACIE,EADJ,CAEES,KAAK,QACLR,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAGRQ,SA9Ca,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACLC,MAAK,WACNP,QAAQC,IAAI,4EACZN,EAAQa,KAAM,QACfC,OAAM,WACPT,QAAQC,IAAI,oEAsCZS,eAjCmB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,IAiCrBC,aAAa,QAEb,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNjB,KAAK,WACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAGX,CACEC,UA1Ca,SAACC,EAAKC,GACzB,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,4EACxCH,EAAMI,OAAO,GAAMJ,EAAMI,OAAO,GAAWF,QAAQC,OAAO,8DACvDD,QAAQG,cA2CZ,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNjB,KAAK,WACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACES,IAAI,EACHT,QAAQ,2DAGV,CACAU,IAAI,GACHV,QAAQ,oEAIZ,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNjB,KAAK,kBACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CAtEG,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAoB,CACpCX,UADoC,SAC1BC,EAAKC,GACX,OAAGS,EAAc,cAAcT,EAAeE,QAAQG,UAC/CH,QAAQC,OAAO,iIA6E1B,kBAAC,IAAD,OAGF,kBAAC,IAAKV,KAAN,CACEtB,WAAY,CACVuC,OAAQ,EACRxC,KAAM,KAGR,kBAAC,IAAD,CAAQyC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/11.f3dfb1db.chunk.js","sourcesContent":["import { Button, Checkbox, Form, Input } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useStores} from '../stores';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Wrapper=styled.div`\r\nmax-width:600px;\r\nmargin:100px  auto;\r\nbox-shadow:2px 2px 4px 4px rgba(0,0,0,0.2);\r\nborder-radius:5px;\r\npadding:18px;\r\n`\r\n\r\nconst Title=styled.h1`\r\nmargin-bottom:25px;\r\ntext-align:center;\r\n`\r\n\r\n\r\nconst layout={\r\nlabelCol:{\r\n    span:6,\r\n},\r\nwrapperCol:{\r\n    span:18\r\n},\r\n};\r\n\r\nconst tailLayout={\r\n    wrapperCol:{\r\n        offset:6,\r\n        span:18\r\n    }\r\n};\r\n\r\nconst Component = () => {\r\nconst {AuthStore}=useStores();\r\nconst history=useHistory();\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    AuthStore.setUsername(values.username);\r\n    AuthStore.setPassword(values.password);\r\n    AuthStore.register() \r\n        .then(()=>{\r\n        console.log('注册成功，即将跳转到首页')\r\n        history.push ('/')\r\n    }).catch(()=>{\r\n      console.log('登录失败，什么都不做')\r\n    });\r\n  \r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const validateUsername=(rule,value)=>{\r\n      if(/\\W/.test(value)) return Promise.reject('只能输入字母数字下划线哦');\r\n      if(value.length<4  || value.length>10) return Promise.reject('输入长度为4-10个字符哦');\r\n     return Promise.resolve ();\r\n  }\r\n\r\n\r\n  const validateConfirm=({getFieldValue})=>({\r\n        validator(rule,value){\r\n            if(getFieldValue('password')===value)  return Promise.resolve ();\r\n            return Promise.reject('两次密码输入不一致，请重新检查后再输入哦');\r\n        }\r\n    })\r\n\r\n\r\n  return (\r\n    <Wrapper> \r\n    <Title>注册</Title>\r\n    <Form\r\n    {...layout}\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n    \r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"用户名\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入用户名',\r\n          },\r\n         \r\n          {\r\n            validator:validateUsername\r\n          }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入密码',\r\n          },\r\n          {\r\n            min:4,\r\n             message:'最少要输入4个字符哦'\r\n             },\r\n \r\n           {\r\n           max:10,\r\n            message:'最多只能输入10个字符哦'\r\n            }\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item \r\n        label=\"确认密码\"\r\n        name=\"confirmpassword\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请再次确认密码',\r\n          },\r\n\r\n          \r\n          validateConfirm\r\n          \r\n        \r\n\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Wrapper>\r\n  );\r\n  \r\n};\r\n\r\nexport default Component;"],"sourceRoot":""}